name: Wheels

on:
  pull_request:
  push:

permissions:
  contents: read

jobs:

  build_bdist:
    name: "Build ${{ matrix.os }} (${{ matrix.arch }}) wheels"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-22.04
            arch: x86_64
          - os: ubuntu-22.04
            arch: aarch64
          - os: macos-14
            arch: arm64
          - os: macos-13
            arch: x86_64

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: 'true'

    - uses: actions/setup-python@v5
      name: Install Python
      with:
        python-version: 3.x

    - name: Setup Micromamba Python ${{ matrix.python-version }}
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-name: build
        init-shell: bash
        create-args: >-
          python=${{ matrix.python-version }} libnetcdf=4.9.2 --channel conda-forge

    - name: "Building ${{ matrix.os }} (${{ matrix.arch }}) wheels"
      uses: pypa/cibuildwheel@v2.16.5
      env:
        CIBW_SKIP: pp* cp36-* cp37-* *-musllinux* cp39-* cp310-* cp311-*
        CIBW_ARCHS: ${{ matrix.arch }}
        CIBW_ENVIRONMENT_MACOS: >
          HDF5_DIR="/Users/runner/micromamba/envs/build"
          netCDF4_DIR="/Users/runner/micromamba/envs/build"
        CIBW_ENVIRONMENT_LINUX: >
          HDF5_DIR="/home/runner/micromamba/envs/build"
          netCDF4_DIR="/home/runner/micromamba/envs/build"
        CIBW_TEST_REQUIRES: pytest cython packaging
        # We need ncdump on path for 3 tests.
        CIBW_TEST_COMMAND: >
          brew install netcdf
          && python -c "import netCDF4; print(f'netCDF4 v{netCDF4.__version__}')"
          && pytest -s -rxs -v {project}/test

    - uses: actions/upload-artifact@v4
      with:
        name: pypi-artifacts-${{ matrix.os }}-${{ matrix.arch }}
        path: ${{ github.workspace }}/wheelhouse/*.whl

  show-artifacts:
    needs: [build_bdist]
    name: "Show artifacts"
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/download-artifact@v4
      with:
        pattern: pypi-artifacts*
        path: ${{ github.workspace }}/dist
        merge-multiple: true

    - shell: bash
      run: |
        ls -lh ${{ github.workspace }}/dist
